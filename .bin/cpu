#!/usr/bin/env bash

prev_file="/tmp/.cpu_stat_prev"
state="normal"

read_cpu() {
    awk '/^cpu / { for (i=2; i<=8; i++) sum += $i; idle=$5; print sum, idle }' /proc/stat
}

# Read current CPU stat
read -r curr_total curr_idle < <(read_cpu)

# If previous stat exists, compute usage
if [[ -f $prev_file ]]; then
    read -r prev_total prev_idle < "$prev_file"
    delta_total=$((curr_total - prev_total))
    delta_idle=$((curr_idle - prev_idle))
    usage=$(( (100 * (delta_total - delta_idle)) / delta_total ))
else
    usage=0
fi

# Save current stat
echo "$curr_total $curr_idle" > "$prev_file"

# Optional: set class by load
if (( usage >= 90 )); then
    state="high"
elif (( usage >= 60 )); then
    state="med"
fi

printf '{"text": "ï‹› %s%%", "class": "%s"}\n' "$usage" "$state"
